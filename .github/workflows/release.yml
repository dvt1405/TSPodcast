name: Release to Firebase App Distribution

on:
  workflow_dispatch:
    inputs:
      buildType:
        description: 'Build type (debug or release)'
        required: true
        default: 'release'
        type: choice
        options:
          - debug
          - release
      releaseNotes:
        description: 'Release notes for this build'
        required: true
        default: 'New release with improvements and bug fixes'
      distributionGroups:
        description: 'Firebase App Distribution groups (comma-separated)'
        required: true
        default: 'podcasttester'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Set up keystore
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          mkdir -p keystore
          echo $KEYSTORE_BASE64 | base64 --decode > keystore/release.keystore

      - name: Build APK
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          BUILD_TYPE: ${{ github.event.inputs.buildType }}
        run: |
          if [ "$BUILD_TYPE" == "debug" ]; then
            ./gradlew generateDebugApk
          else
            ./gradlew generateReleaseApk
          fi

      - name: Upload APK as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.inputs.buildType }}-apk
          path: app/build/outputs/apk/${{ github.event.inputs.buildType }}/*.apk

      - name: Setup Firebase CLI
        run: npm install -g firebase-tools

      - name: Distribute to Firebase App Distribution
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          FIREBASE_DEBUG_APP_ID: ${{ secrets.FIREBASE_DEBUG_APP_ID }}
          FIREBASE_RELEASE_APP_ID: ${{ secrets.FIREBASE_RELEASE_APP_ID }}
          RELEASE_NOTES: ${{ github.event.inputs.releaseNotes }}
          DISTRIBUTION_GROUPS: ${{ github.event.inputs.distributionGroups }}
          BUILD_TYPE: ${{ github.event.inputs.buildType }}
        run: |
          echo "Distributing $BUILD_TYPE APK to Firebase App Distribution..."

          # Set the appropriate Firebase App ID based on the build type
          if [ "$BUILD_TYPE" == "debug" ]; then
            FIREBASE_APP_ID=$FIREBASE_DEBUG_APP_ID
            APK_PATH=$(find app/build/outputs/apk/debug -name "*.apk" | head -n 1)
          else
            FIREBASE_APP_ID=$FIREBASE_RELEASE_APP_ID
            APK_PATH=$(find app/build/outputs/apk/release -name "*.apk" | head -n 1)
          fi

          echo "Using Firebase App ID: $FIREBASE_APP_ID"
          echo "APK Path: $APK_PATH"

          firebase appdistribution:distribute "$APK_PATH" \
            --app "$FIREBASE_APP_ID" \
            --release-notes "$RELEASE_NOTES" \
            --groups "$DISTRIBUTION_GROUPS" \
            --token "$FIREBASE_TOKEN"
